purpose: endian-specific operators

[ifndef] le-w@
: le-w@   ( a -- w )   dup    c@ swap ca1+    c@ bwjoin  ;
[then]
[ifndef] be-w@
: be-w@   ( a -- w )   dup ca1+    c@ swap    c@ bwjoin  ;
1A0FBF8 	 0  0 62 65 2D 77 40 85 
1A0FC00 	DC FB A0  1 20 40 A0  1 
1A0FC08 	40 49 A0  1 78 50 A0  1 
1A0FC10 	C4 4C A0  1 68 49 A0  1 
1A0FC18 	C4 4C A0  1 84 FB A0  1 
1A0FC20 	58 46 A0  1 
[then]
[ifndef] le-l@
: le-l@   ( a -- l )   dup le-w@ swap wa1+ le-w@ wljoin  ;
[then]
[ifndef] be-l@
: be-l@   ( a -- l )   dup wa1+ be-w@ swap be-w@ wljoin  ;
1A0FC24 	 0  0 62 65 
1A0FC28 	2D 6C 40 85  4 FC A0  1 
1A0FC30 	20 40 A0  1 40 49 A0  1 
1A0FC38 	A0 50 A0  1  4 FC A0  1 
1A0FC40 	68 49 A0  1  4 FC A0  1 
1A0FC48 	D4 4F A0  1 58 46 A0  1 
[then]

[ifndef] le-w!
: le-w!   ( w a -- )   >r wbsplit r@ ca1+    c! r>    c!  ;
[then]
[ifndef] be-w!
: be-w!   ( w a -- )   >r wbsplit r@    c! r> ca1+    c!  ;
1A0FC50 	 0  0 62 65 2D 77 21 85 
1A0FC58 	30 FC A0  1 20 40 A0  1 
1A0FC60 	BC 45 A0  1 54 FB A0  1 
1A0FC68 	E4 45 A0  1 B8 4D A0  1 
1A0FC70 	D0 45 A0  1 78 50 A0  1 
1A0FC78 	B8 4D A0  1 58 46 A0  1 
[then]
[ifndef] le-l!
: le-l!   ( l a -- )   >r lwsplit r@ wa1+ le-w! r> le-w!  ;
[then]
[ifndef] be-l!
: be-l!   ( l a -- )   >r lwsplit r@ be-w! r> wa1+ be-w!  ;
1A0FC80 	 0  0 62 65 2D 6C 21 85 
1A0FC88 	5C FC A0  1 20 40 A0  1 
1A0FC90 	BC 45 A0  1 A0 4F A0  1 
1A0FC98 	E4 45 A0  1 5C FC A0  1 
1A0FCA0 	D0 45 A0  1 A0 50 A0  1 
1A0FCA8 	5C FC A0  1 58 46 A0  1 
[then]

: le-l,   ( l -- )     here /l allot le-l!  ;
1A0FCB0 	 0  0 6C 65 2D 6C 2C 85 
1A0FCB8 	8C FC A0  1 20 40 A0  1 
1A0FCC0 	70 54 A0  1 30 51 A0  1 
1A0FCC8 	E4 54 A0  1 44 4D A0  1 
1A0FCD0 	58 46 A0  1 
: be-l,   ( l -- )     here /l allot be-l!  ;
1A0FCD4 	 0  0 62 65 
1A0FCD8 	2D 6C 2C 85 BC FC A0  1 
1A0FCE0 	20 40 A0  1 70 54 A0  1 
1A0FCE8 	30 51 A0  1 E4 54 A0  1 
1A0FCF0 	8C FC A0  1 58 46 A0  1 

[ifndef] /x
8 constant /x
1A0FCF8 	 0 2F 78 82 E0 FC A0  1 
1A0FD00 	68 40 A0  1  8  0  0  0 
[then]

32\ : le-x@  ( adr -- d )  dup le-l@  swap la1+ le-l@  ;
1A0FD08 	 0  0 6C 65 2D 78 40 85 
1A0FD10 	 0 FD A0  1 20 40 A0  1 
1A0FD18 	40 49 A0  1 4C 4C A0  1 
1A0FD20 	68 49 A0  1 B4 50 A0  1 
1A0FD28 	4C 4C A0  1 58 46 A0  1 
32\ : be-x@  ( adr -- d )  dup la1+ be-l@  swap be-l@  ;
1A0FD30 	 0  0 62 65 2D 78 40 85 
1A0FD38 	14 FD A0  1 20 40 A0  1 
1A0FD40 	40 49 A0  1 B4 50 A0  1 
1A0FD48 	30 FC A0  1 68 49 A0  1 
1A0FD50 	30 FC A0  1 58 46 A0  1 
32\ : le-x!  ( d adr -- )  tuck la1+ le-l!  le-l!  ;
1A0FD58 	 0  0 6C 65 2D 78 21 85 
1A0FD60 	3C FD A0  1 20 40 A0  1 
1A0FD68 	E8 46 A0  1 B4 50 A0  1 
1A0FD70 	44 4D A0  1 44 4D A0  1 
1A0FD78 	58 46 A0  1 
32\ : be-x!  ( d adr -- )  tuck be-l!  la1+ be-l!  ;
1A0FD7C 	 0  0 62 65 
1A0FD80 	2D 78 21 85 64 FD A0  1 
1A0FD88 	20 40 A0  1 E8 46 A0  1 
1A0FD90 	8C FC A0  1 B4 50 A0  1 
1A0FD98 	8C FC A0  1 58 46 A0  1 

64\ : le-x@   ( a -- l )   dup le-l@  swap la1+ le-l@ lxjoin  ;
64\ : be-x@   ( a -- l )   dup la1+ be-l@  swap be-l@ lxjoin  ;
64\ : le-x!   ( l a -- )   >r xlsplit r@ la1+ le-l! r> le-l!  ;
64\ : be-x!   ( l a -- )   >r xlsplit r@ be-l! r> la1+ be-l!  ;

: le-x,   ( x -- )  here /x allot le-x!  ;
1A0FDA0 	 0  0 6C 65 2D 78 2C 85 
1A0FDA8 	88 FD A0  1 20 40 A0  1 
1A0FDB0 	70 54 A0  1  0 FD A0  1 
1A0FDB8 	E4 54 A0  1 64 FD A0  1 
1A0FDC0 	58 46 A0  1 
: be-x,   ( x -- )  here /x allot be-x!  ;
1A0FDC4 	 0  0 62 65 
1A0FDC8 	2D 78 2C 85 AC FD A0  1 
1A0FDD0 	20 40 A0  1 70 54 A0  1 
1A0FDD8 	 0 FD A0  1 E4 54 A0  1 
1A0FDE0 	88 FD A0  1 58 46 A0  1 

32\ alias be-n@ be-l@
1A0FDE8 	 0  0 62 65 2D 6E 40 A5 
1A0FDF0 	D0 FD A0  1 30 FC A0  1 
32\ alias be-n! be-l!
1A0FDF8 	 0  0 62 65 2D 6E 21 A5 
1A0FE00 	F4 FD A0  1 8C FC A0  1 
32\ alias be-n, be-l,
1A0FE08 	 0  0 62 65 2D 6E 2C A5 
1A0FE10 	 4 FE A0  1 E0 FC A0  1 

64\ alias be-n@ be-x@
64\ alias be-n! be-x!
64\ alias be-n, be-x,
