purpose: Driver for UHCI USB Controller

hex
headers

defer end-extra			' noop to end-extra
1A50184 	 0  0 65 6E 
1A50188 	64 2D 65 78 74 72 61 89 
1A50190 	4C  1 A5  1 5C 40 A0  1 
1A50198 	58  E  0  0 

true value first-open?
1A5019C 	66 69 72 73 
1A501A0 	74 2D 6F 70 65 6E 3F 8B 
1A501A8 	94  1 A5  1 50 40 A0  1 
1A501B0 	5C  E  0  0 
0 value open-count
1A501B4 	 0 6F 70 65 
1A501B8 	6E 2D 63 6F 75 6E 74 8A 
1A501C0 	AC  1 A5  1 50 40 A0  1 
1A501C8 	60  E  0  0 
0 value uhci-reg
1A501CC 	 0  0  0 75 
1A501D0 	68 63 69 2D 72 65 67 88 
1A501D8 	C4  1 A5  1 50 40 A0  1 
1A501E0 	64  E  0  0 

: map-regs  ( -- )  /regs my-map-in to uhci-reg  ;
1A501E4 	 0  0  0 6D 
1A501E8 	61 70 2D 72 65 67 73 88 
1A501F0 	DC  1 A5  1 20 40 A0  1 
1A501F8 	64 FF A4  1 9C  0 A5  1 
1A50200 	B8 40 A0  1 DC  1 A5  1 
1A50208 	58 46 A0  1 

: unmap-regs  ( -- )
1A5020C 	 0 75 6E 6D 
1A50210 	61 70 2D 72 65 67 73 8A 
1A50218 	F4  1 A5  1 20 40 A0  1 
   uhci-reg  /regs  my-map-out  0 to uhci-reg
1A50220 	DC  1 A5  1 64 FF A4  1 
1A50228 	 0  1 A5  1 70 6F A0  1 
1A50230 	B8 40 A0  1 DC  1 A5  1 
;
1A50238 	58 46 A0  1 

: uhci-b@  ( idx -- data )  uhci-reg + rb@  ;
1A5023C 	75 68 63 69 
1A50240 	2D 62 40 87 1C  2 A5  1 
1A50248 	20 40 A0  1 DC  1 A5  1 
1A50250 	 4 45 A0  1 A8 B1 A2  1 
1A50258 	58 46 A0  1 
: uhci-b!  ( data idx -- )  uhci-reg + rb!  ;
1A5025C 	75 68 63 69 
1A50260 	2D 62 21 87 48  2 A5  1 
1A50268 	20 40 A0  1 DC  1 A5  1 
1A50270 	 4 45 A0  1 1C B2 A2  1 
1A50278 	58 46 A0  1 
: uhci-w@  ( idx -- data )  uhci-reg + rw@  ;
1A5027C 	75 68 63 69 
1A50280 	2D 77 40 87 68  2 A5  1 
1A50288 	20 40 A0  1 DC  1 A5  1 
1A50290 	 4 45 A0  1 D0 B1 A2  1 
1A50298 	58 46 A0  1 
: uhci-w!  ( data idx -- )  uhci-reg + rw!  ;
1A5029C 	75 68 63 69 
1A502A0 	2D 77 21 87 88  2 A5  1 
1A502A8 	20 40 A0  1 DC  1 A5  1 
1A502B0 	 4 45 A0  1 40 B2 A2  1 
1A502B8 	58 46 A0  1 
: uhci-l@  ( idx -- data )  uhci-reg + rl@  ;
1A502BC 	75 68 63 69 
1A502C0 	2D 6C 40 87 A8  2 A5  1 
1A502C8 	20 40 A0  1 DC  1 A5  1 
1A502D0 	 4 45 A0  1 F8 B1 A2  1 
1A502D8 	58 46 A0  1 
: uhci-l!  ( data idx -- )  uhci-reg + rl!  ;
1A502DC 	75 68 63 69 
1A502E0 	2D 6C 21 87 C8  2 A5  1 
1A502E8 	20 40 A0  1 DC  1 A5  1 
1A502F0 	 4 45 A0  1 68 B2 A2  1 
1A502F8 	58 46 A0  1 

: usbcmd@     ( -- data )   0 uhci-w@  ;
1A502FC 	75 73 62 63 
1A50300 	6D 64 40 87 E8  2 A5  1 
1A50308 	20 40 A0  1 70 6F A0  1 
1A50310 	88  2 A5  1 58 46 A0  1 
: usbcmd!     ( data -- )   0 uhci-w!  ;
1A50318 	75 73 62 63 6D 64 21 87 
1A50320 	 8  3 A5  1 20 40 A0  1 
1A50328 	70 6F A0  1 A8  2 A5  1 
1A50330 	58 46 A0  1 
: usbsts@     ( -- data )   2 uhci-w@  ;
1A50334 	75 73 62 73 
1A50338 	74 73 40 87 24  3 A5  1 
1A50340 	20 40 A0  1 90 6F A0  1 
1A50348 	88  2 A5  1 58 46 A0  1 
: usbsts!     ( data -- )   2 uhci-w!  ;
1A50350 	75 73 62 73 74 73 21 87 
1A50358 	40  3 A5  1 20 40 A0  1 
1A50360 	90 6F A0  1 A8  2 A5  1 
1A50368 	58 46 A0  1 
: usbintr@    ( -- data )   4 uhci-w@  ;
1A5036C 	 0  0  0 75 
1A50370 	73 62 69 6E 74 72 40 88 
1A50378 	5C  3 A5  1 20 40 A0  1 
1A50380 	B0 6F A0  1 88  2 A5  1 
1A50388 	58 46 A0  1 
: usbintr!    ( data -- )   4 uhci-w!  ;
1A5038C 	 0  0  0 75 
1A50390 	73 62 69 6E 74 72 21 88 
1A50398 	7C  3 A5  1 20 40 A0  1 
1A503A0 	B0 6F A0  1 A8  2 A5  1 
1A503A8 	58 46 A0  1 
: frnum@      ( -- data )   6 uhci-w@  ;
1A503AC 	 0 66 72 6E 
1A503B0 	75 6D 40 86 9C  3 A5  1 
1A503B8 	20 40 A0  1 D0 6F A0  1 
1A503C0 	88  2 A5  1 58 46 A0  1 
: frnum!      ( data -- )   6 uhci-w!  ;
1A503C8 	 0 66 72 6E 75 6D 21 86 
1A503D0 	B8  3 A5  1 20 40 A0  1 
1A503D8 	D0 6F A0  1 A8  2 A5  1 
1A503E0 	58 46 A0  1 
: flbaseadd@  ( -- data )   8 uhci-l@  ;
1A503E4 	 0 66 6C 62 
1A503E8 	61 73 65 61 64 64 40 8A 
1A503F0 	D4  3 A5  1 20 40 A0  1 
1A503F8 	F0 6F A0  1 C8  2 A5  1 
1A50400 	58 46 A0  1 
: flbaseadd!  ( data -- )   8 uhci-l!  ;
1A50404 	 0 66 6C 62 
1A50408 	61 73 65 61 64 64 21 8A 
1A50410 	F4  3 A5  1 20 40 A0  1 
1A50418 	F0 6F A0  1 E8  2 A5  1 
1A50420 	58 46 A0  1 
: sof@        ( -- data )   c uhci-b@  ;
1A50424 	 0  0  0 73 
1A50428 	6F 66 40 84 14  4 A5  1 
1A50430 	20 40 A0  1 58 41 A0  1 
1A50438 	 C  0  0  0 48  2 A5  1 
1A50440 	58 46 A0  1 
: sof!        ( data -- )   c uhci-b!  ;
1A50444 	 0  0  0 73 
1A50448 	6F 66 21 84 30  4 A5  1 
1A50450 	20 40 A0  1 58 41 A0  1 
1A50458 	 C  0  0  0 68  2 A5  1 
1A50460 	58 46 A0  1 
: portsc@     ( port -- data )  2* 10 + uhci-w@  ;
1A50464 	70 6F 72 74 
1A50468 	73 63 40 87 50  4 A5  1 
1A50470 	20 40 A0  1 A0 4B A0  1 
1A50478 	58 41 A0  1 10  0  0  0 
1A50480 	 4 45 A0  1 88  2 A5  1 
1A50488 	58 46 A0  1 
: portsc!     ( data port -- )  2* 10 + uhci-w!  ;
1A5048C 	70 6F 72 74 
1A50490 	73 63 21 87 70  4 A5  1 
1A50498 	20 40 A0  1 A0 4B A0  1 
1A504A0 	58 41 A0  1 10  0  0  0 
1A504A8 	 4 45 A0  1 A8  2 A5  1 
1A504B0 	58 46 A0  1 

\ We mustn't wait more than 3 ms between releasing the reset and enabling
\ the port to begin the SOF stream, otherwise some devices (e.g. pl2303)
\ will go into suspend state and then not respond to set-address.
: reset-port  ( port -- )
1A504B4 	 0 72 65 73 
1A504B8 	65 74 2D 70 6F 72 74 8A 
1A504C0 	98  4 A5  1 20 40 A0  1 
   dup >r  portsc@ h# 20e invert and    ( value r: port )  \ Clear reset, enable, status
1A504C8 	40 49 A0  1 BC 45 A0  1 
1A504D0 	70  4 A5  1 58 41 A0  1 
1A504D8 	 E  2  0  0 30 45 A0  1 
1A504E0 	5C 44 A0  1 
   dup h# 200 or  r@ portsc!	        ( value r: port )  \ Reset port
1A504E4 	40 49 A0  1 
1A504E8 	58 41 A0  1  0  2  0  0 
1A504F0 	70 44 A0  1 E4 45 A0  1 
1A504F8 	98  4 A5  1 
   d# 30 ms                             ( value r: port )  \ > 10 ms - reset time
1A504FC 	58 41 A0  1 
1A50500 	1E  0  0  0 60 E0 A1  1 
   dup r@ portsc!                       ( value r: port )  \ Release reset
1A50508 	40 49 A0  1 E4 45 A0  1 
1A50510 	98  4 A5  1 
   1 ms                                 ( value r: port )  \ > 5.3 uS - reconnect time
1A50514 	80 6F A0  1 
1A50518 	60 E0 A1  1 
   h# e or  r> portsc!	                ( )  \ Enable port and clear status
1A5051C 	58 41 A0  1 
1A50520 	 E  0  0  0 70 44 A0  1 
1A50528 	D0 45 A0  1 98  4 A5  1 
;
1A50530 	58 46 A0  1 

: reset-usb  ( -- )
1A50534 	 0  0 72 65 
1A50538 	73 65 74 2D 75 73 62 89 
1A50540 	C4  4 A5  1 20 40 A0  1 
   uhci-reg dup 0=  if  map-regs  then
1A50548 	DC  1 A5  1 40 49 A0  1 
1A50550 	24 47 A0  1 DC 41 A0  1 
1A50558 	 8  0  0  0 F4  1 A5  1 
   4 usbcmd!			\ Global reset
1A50560 	B0 6F A0  1 24  3 A5  1 
   50 ms
1A50568 	58 41 A0  1 50  0  0  0 
1A50570 	60 E0 A1  1 
   0 usbcmd!
1A50574 	70 6F A0  1 
1A50578 	24  3 A5  1 
   10 ms
1A5057C 	58 41 A0  1 
1A50580 	10  0  0  0 60 E0 A1  1 

   2 usbcmd!			\ Host reset
1A50588 	90 6F A0  1 24  3 A5  1 
   d# 10 0  do
1A50590 	58 41 A0  1  A  0  0  0 
1A50598 	70 6F A0  1 88 42 A0  1 
1A505A0 	28  0  0  0 
      usbcmd@ 2 and  0=  ?leave
1A505A4 	 8  3 A5  1 
1A505A8 	90 6F A0  1 5C 44 A0  1 
1A505B0 	24 47 A0  1 34 43 A0  1 
      1 ms
1A505B8 	80 6F A0  1 60 E0 A1  1 
   loop
1A505C0 	F8 41 A0  1 E0 FF FF FF 
   0=  if  unmap-regs  then
1A505C8 	24 47 A0  1 DC 41 A0  1 
1A505D0 	 8  0  0  0 1C  2 A5  1 
;
1A505D8 	58 46 A0  1 

: (process-hc-status)  ( -- )
1A505DC 	28 70 72 6F 
1A505E0 	63 65 73 73 2D 68 63 2D 
1A505E8 	73 74 61 74 75 73 29 93 
1A505F0 	44  5 A5  1 20 40 A0  1 
   usbsts@ dup h# 3e and usbsts!	\ Clear errors and interrupts
1A505F8 	40  3 A5  1 40 49 A0  1 
1A50600 	58 41 A0  1 3E  0  0  0 
1A50608 	5C 44 A0  1 5C  3 A5  1 
   38 and ?dup  if
1A50610 	58 41 A0  1 38  0  0  0 
1A50618 	5C 44 A0  1 B4 70 A0  1 
1A50620 	DC 41 A0  1 C4  0  0  0 
      usbcmd@ 1 or usbcmd!		\ Exit halted state
1A50628 	 8  3 A5  1 80 6F A0  1 
1A50630 	70 44 A0  1 24  3 A5  1 
      dup 20 and  if  " Host controller halted"  USB_ERR_HCHALTED set-usb-error  then
1A50638 	40 49 A0  1 58 41 A0  1 
1A50640 	20  0  0  0 5C 44 A0  1 
1A50648 	DC 41 A0  1 28  0  0  0 
1A50650 	9C 53 A0  1 16 48 6F 73 
1A50658 	74 20 63 6F 6E 74 72 6F 
1A50660 	6C 6C 65 72 20 68 61 6C 
1A50668 	74 65 64  0 E0 2C A4  1 
1A50670 	20 40 A4  1 
      dup 10 and  if  " Host controller process error"  USB_ERR_HCERROR set-usb-error  then
1A50674 	40 49 A0  1 
1A50678 	58 41 A0  1 10  0  0  0 
1A50680 	5C 44 A0  1 DC 41 A0  1 
1A50688 	30  0  0  0 9C 53 A0  1 
1A50690 	1D 48 6F 73 74 20 63 6F 
1A50698 	6E 74 72 6F 6C 6C 65 72 
1A506A0 	20 70 72 6F 63 65 73 73 
1A506A8 	20 65 72 72 6F 72  0  0 
1A506B0 	88 2D A4  1 20 40 A4  1 
           8 and  if  " Host system error"  USB_ERR_HOSTERROR set-usb-error  then
1A506B8 	F0 6F A0  1 5C 44 A0  1 
1A506C0 	DC 41 A0  1 24  0  0  0 
1A506C8 	9C 53 A0  1 11 48 6F 73 
1A506D0 	74 20 73 79 73 74 65 6D 
1A506D8 	20 65 72 72 6F 72  0  0 
1A506E0 	A8 2D A4  1 20 40 A4  1 
   then
;
1A506E8 	58 46 A0  1 
' (process-hc-status) to process-hc-status

external
\ Kick the USB controller into operation mode.
: start-usb     ( -- )
1A506EC 	 0  0 73 74 
1A506F0 	61 72 74 2D 75 73 62 89 
1A506F8 	F4  5 A5  1 20 40 A0  1 
   0 frnum!			\ Start at frame 0
1A50700 	70 6F A0  1 D4  3 A5  1 
   framelist-phys flbaseadd!
1A50708 	6C EE A4  1 14  4 A5  1 
   h# c1 usbcmd!		\ Run, Config, Max Packet=64
1A50710 	58 41 A0  1 C1  0  0  0 
1A50718 	24  3 A5  1 
;
1A5071C 	58 46 A0  1 
: stop-usb  ( -- )  h# c0 usbcmd!  ;
1A50720 	 0  0  0 73 74 6F 70 2D 
1A50728 	75 73 62 88 FC  6 A5  1 
1A50730 	20 40 A0  1 58 41 A0  1 
1A50738 	C0  0  0  0 24  3 A5  1 
1A50740 	58 46 A0  1 
: suspend-usb   ( -- )  ;
1A50744 	73 75 73 70 
1A50748 	65 6E 64 2D 75 73 62 8B 
1A50750 	30  7 A5  1 20 40 A0  1 
1A50758 	58 46 A0  1 
