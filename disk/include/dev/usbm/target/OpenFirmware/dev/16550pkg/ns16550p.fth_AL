purpose: Driver for NS16550A UART chip which relies on 16550 package support

\ Please Note:  This driver is NOT suitable for a stand-alone FCode ROM.
\ The code relies on a 16550 package and has a selftest method.

hex
headers

" serial" name			\ Name of device for identification
1A3B480 	73 65 72 69 61 6C  0 6E 
1A3B488 	61 6D 65 84 74 B4 A3  1 
1A3B490 	BC 13 A2  1 14  0  0  0 
1A3B498 	 7  0  0  0 
" serial" device-type		\ Device class
1A3B49C 	73 65 72 69 
1A3B4A0 	61 6C  0  0 64 65 76 69 
1A3B4A8 	63 65 5F 74 79 70 65 8B 
1A3B4B0 	90 B4 A3  1 BC 13 A2  1 
1A3B4B8 	1C  0  0  0  7  0  0  0 
" pnpPNP,501" " compatible" string-property
1A3B4C0 	70 6E 70 50 4E 50 2C 35 
1A3B4C8 	30 31  0  0  0 63 6F 6D 
1A3B4D0 	70 61 74 69 62 6C 65 8A 
1A3B4D8 	B4 B4 A3  1 BC 13 A2  1 
1A3B4E0 	20  0  0  0  B  0  0  0 

\ This can be overridden if necessary by redefining this property value
\ after loading this file.
d# 1843200 " clock-frequency" integer-property
1A3B4E8 	 0 1C 20  0 

\ The UART chip occupies 8 bytes of IO space beginning at its base address

my-address my-space  8 reg	\ Report address space used by device
1A3B4EC 	 0  0  0  1 
1A3B4F0 	 0  0  2 F8  0  0  0  8 
1A3B4F8 	72 65 67 83 DC B4 A3  1 
1A3B500 	BC 13 A2  1 18  0  0  0 
1A3B508 	 C  0  0  0 

0 instance value support-ih	\ ihandle of 16550 supprt package
1A3B50C 	 0 73 75 70 
1A3B510 	70 6F 72 74 2D 69 68 8A 
1A3B518 	 0  0 A0  1 C0 FE A1  1 
1A3B520 	18  0  0  0 
variable refcount  0 refcount !
1A3B524 	 0  0  0 72 
1A3B528 	65 66 63 6F 75 6E 74 88 
1A3B530 	1C B5 A3  1 48 40 A0  1 
1A3B538 	18  C  0  0 

0 value break?			\ Shared between all instances
1A3B53C 	 0 62 72 65 
1A3B540 	61 6B 3F 86 34 B5 A3  1 
1A3B548 	50 40 A0  1 1C  C  0  0 

external
: $call-support  ( ... $ -- ... )  support-ih $call-method  ;
1A3B550 	 0  0 24 63 61 6C 6C 2D 
1A3B558 	73 75 70 70 6F 72 74 8D 
1A3B560 	48 B5 A3  1 20 40 A0  1 
1A3B568 	1C B5 A3  1 B4 31 A2  1 
1A3B570 	58 46 A0  1 

0 instance value base-adr
1A3B574 	 0  0  0 62 
1A3B578 	61 73 65 2D 61 64 72 88 
1A3B580 	64 B5 A3  1 C0 FE A1  1 
1A3B588 	1C  0  0  0 

: set-break  ( -- )  true to break?  ;
1A3B58C 	 0  0 73 65 
1A3B590 	74 2D 62 72 65 61 6B 89 
1A3B598 	84 B5 A3  1 20 40 A0  1 
1A3B5A0 	 4 70 A0  1 B8 40 A0  1 
1A3B5A8 	48 B5 A3  1 58 46 A0  1 
: get-break  ( -- flag )  break?  dup  if  false to break?  then  ;
1A3B5B0 	 0  0 67 65 74 2D 62 72 
1A3B5B8 	65 61 6B 89 9C B5 A3  1 
1A3B5C0 	20 40 A0  1 48 B5 A3  1 
1A3B5C8 	40 49 A0  1 DC 41 A0  1 
1A3B5D0 	10  0  0  0 18 70 A0  1 
1A3B5D8 	B8 40 A0  1 48 B5 A3  1 
1A3B5E0 	58 46 A0  1 

headers
\ Map the device into virtual address space
: map-uart  ( -- )   my-unit  8  " map-in"  $call-parent to base-adr  ;
1A3B5E4 	 0  0  0 6D 
1A3B5E8 	61 70 2D 75 61 72 74 88 
1A3B5F0 	C0 B5 A3  1 20 40 A0  1 
1A3B5F8 	70 10 A2  1 F0 6F A0  1 
1A3B600 	9C 53 A0  1  6 6D 61 70 
1A3B608 	2D 69 6E  0 DC 31 A2  1 
1A3B610 	48 B8 A1  1 84 B5 A3  1 
1A3B618 	58 46 A0  1 

\ Release the mapping resources used by the device.
: unmap-uart  ( -- )  base-adr 8  " map-out" $call-parent  ;
1A3B61C 	 0 75 6E 6D 
1A3B620 	61 70 2D 75 61 72 74 8A 
1A3B628 	F4 B5 A3  1 20 40 A0  1 
1A3B630 	84 B5 A3  1 F0 6F A0  1 
1A3B638 	9C 53 A0  1  7 6D 61 70 
1A3B640 	2D 6F 75 74  0  0  0  0 
1A3B648 	DC 31 A2  1 58 46 A0  1 

external

: rts-dtr-off    ( -- )  " rts-dtr-off"   $call-support  ;
1A3B650 	72 74 73 2D 64 74 72 2D 
1A3B658 	6F 66 66 8B 2C B6 A3  1 
1A3B660 	20 40 A0  1 9C 53 A0  1 
1A3B668 	 B 72 74 73 2D 64 74 72 
1A3B670 	2D 6F 66 66  0  0  0  0 
1A3B678 	64 B5 A3  1 58 46 A0  1 
: rts-dtr-on     ( -- )  " rts-dtr-on"    $call-support  ;
1A3B680 	 0 72 74 73 2D 64 74 72 
1A3B688 	2D 6F 6E 8A 60 B6 A3  1 
1A3B690 	20 40 A0  1 9C 53 A0  1 
1A3B698 	 A 72 74 73 2D 64 74 72 
1A3B6A0 	2D 6F 6E  0 64 B5 A3  1 
1A3B6A8 	58 46 A0  1 
: use-irqs       ( -- )  " use-irqs"      $call-support  ;
1A3B6AC 	 0  0  0 75 
1A3B6B0 	73 65 2D 69 72 71 73 88 
1A3B6B8 	90 B6 A3  1 20 40 A0  1 
1A3B6C0 	9C 53 A0  1  8 75 73 65 
1A3B6C8 	2D 69 72 71 73  0  0  0 
1A3B6D0 	64 B5 A3  1 58 46 A0  1 
: use-polling    ( -- )  " use-polling"   $call-support  ;
1A3B6D8 	75 73 65 2D 70 6F 6C 6C 
1A3B6E0 	69 6E 67 8B BC B6 A3  1 
1A3B6E8 	20 40 A0  1 9C 53 A0  1 
1A3B6F0 	 B 75 73 65 2D 70 6F 6C 
1A3B6F8 	6C 69 6E 67  0  0  0  0 
1A3B700 	64 B5 A3  1 58 46 A0  1 
: install-abort  ( -- )  " install-abort" $call-support  ;
1A3B708 	 0  0 69 6E 73 74 61 6C 
1A3B710 	6C 2D 61 62 6F 72 74 8D 
1A3B718 	E8 B6 A3  1 20 40 A0  1 
1A3B720 	9C 53 A0  1  D 69 6E 73 
1A3B728 	74 61 6C 6C 2D 61 62 6F 
1A3B730 	72 74  0  0 64 B5 A3  1 
1A3B738 	58 46 A0  1 
: remove-abort   ( -- )  " remove-abort"  $call-support  ;
1A3B73C 	 0  0  0 72 
1A3B740 	65 6D 6F 76 65 2D 61 62 
1A3B748 	6F 72 74 8C 1C B7 A3  1 
1A3B750 	20 40 A0  1 9C 53 A0  1 
1A3B758 	 C 72 65 6D 6F 76 65 2D 
1A3B760 	61 62 6F 72 74  0  0  0 
1A3B768 	64 B5 A3  1 58 46 A0  1 

: read   ( adr len -- actual )  " read"   $call-support  ;
1A3B770 	 0  0  0 72 65 61 64 84 
1A3B778 	50 B7 A3  1 20 40 A0  1 
1A3B780 	9C 53 A0  1  4 72 65 61 
1A3B788 	64  0  0  0 64 B5 A3  1 
1A3B790 	58 46 A0  1 
: write  ( adr len -- actual )  " write"  $call-support  ;
1A3B794 	 0  0 77 72 
1A3B798 	69 74 65 85 7C B7 A3  1 
1A3B7A0 	20 40 A0  1 9C 53 A0  1 
1A3B7A8 	 5 77 72 69 74 65  0  0 
1A3B7B0 	64 B5 A3  1 58 46 A0  1 

: open  ( -- flag )
1A3B7B8 	 0  0  0 6F 70 65 6E 84 
1A3B7C0 	A0 B7 A3  1 20 40 A0  1 
   map-uart
1A3B7C8 	F4 B5 A3  1 
   my-args " 16550" $open-package  to support-ih
1A3B7CC 	10  7 A2  1 
1A3B7D0 	9C 53 A0  1  5 31 36 35 
1A3B7D8 	35 30  0  0 80 3A A2  1 
1A3B7E0 	48 B8 A1  1 1C B5 A3  1 
   support-ih 0=  if  unmap-uart false  exit  then
1A3B7E8 	1C B5 A3  1 24 47 A0  1 
1A3B7F0 	DC 41 A0  1 10  0  0  0 
1A3B7F8 	2C B6 A3  1 18 70 A0  1 
1A3B800 	40 46 A0  1 
   refcount @ 1+  refcount !
1A3B804 	34 B5 A3  1 
1A3B808 	5C 4C A0  1 30 4B A0  1 
1A3B810 	34 B5 A3  1 54 4D A0  1 
   true
1A3B818 	 4 70 A0  1 
;
1A3B81C 	58 46 A0  1 

: close  ( -- )
1A3B820 	 0  0 63 6C 6F 73 65 85 
1A3B828 	C4 B7 A3  1 20 40 A0  1 
   support-ih close-package
1A3B830 	1C B5 A3  1 A4 36 A2  1 
   unmap-uart
1A3B838 	2C B6 A3  1 
   refcount @ 1-  0 max  refcount !
1A3B83C 	34 B5 A3  1 
1A3B840 	5C 4C A0  1 54 4B A0  1 
1A3B848 	70 6F A0  1 9C 4A A0  1 
1A3B850 	34 B5 A3  1 54 4D A0  1 
;
1A3B858 	58 46 A0  1 

: selftest  ( -- 0 )		\ Test device by sending a bunch of characters
1A3B85C 	 0  0  0 73 
1A3B860 	65 6C 66 74 65 73 74 88 
1A3B868 	2C B8 A3  1 20 40 A0  1 
   refcount @  if  ." Device in use" cr 0 exit  then
1A3B870 	34 B5 A3  1 5C 4C A0  1 
1A3B878 	DC 41 A0  1 24  0  0  0 
1A3B880 	20 7C A0  1  D 44 65 76 
1A3B888 	69 63 65 20 69 6E 20 75 
1A3B890 	73 65  0  0 80 6D A0  1 
1A3B898 	70 6F A0  1 40 46 A0  1 
   open 0=  if  ." Device won't open" cr true exit  then
1A3B8A0 	C4 B7 A3  1 24 47 A0  1 
1A3B8A8 	DC 41 A0  1 28  0  0  0 
1A3B8B0 	20 7C A0  1 11 44 65 76 
1A3B8B8 	69 63 65 20 77 6F 6E 27 
1A3B8C0 	74 20 6F 70 65 6E  0  0 
1A3B8C8 	80 6D A0  1  4 70 A0  1 
1A3B8D0 	40 46 A0  1 
   " selftest" $call-support  close   0
1A3B8D4 	9C 53 A0  1 
1A3B8D8 	 8 73 65 6C 66 74 65 73 
1A3B8E0 	74  0  0  0 64 B5 A3  1 
1A3B8E8 	2C B8 A3  1 70 6F A0  1 
;
1A3B8F0 	58 46 A0  1 

headers
