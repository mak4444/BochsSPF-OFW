purpose: USB elaborations for the BIOS loaded OFW

0 value usb-delay  \ Milliseconds to wait before set-address
1A427CC 	 0  0 75 73 
1A427D0 	62 2D 64 65 6C 61 79 89 
1A427D8 	74 27 A4  1 50 40 A0  1 
1A427E0 	BC  D  0  0 

devalias u    /usb/disk
1A427E4 	 0  0 75 81 
1A427E8 	98 E6 A3  1 20 21 A2  1 
1A427F0 	 9 2F 75 73 62 2F 64 69 
1A427F8 	73 6B  0  0 

\ Like $show-devs, but ignores pagination keystrokes
: $nopage-show-devs  ( nodename$ -- )
1A427FC 	 0  0 24 6E 
1A42800 	6F 70 61 67 65 2D 73 68 
1A42808 	6F 77 2D 64 65 76 73 91 
1A42810 	DC 27 A4  1 20 40 A0  1 
   ['] exit? behavior >r  ['] false to exit?
1A42818 	60 53 A0  1 34  D A1  1 
1A42820 	10 C7 A0  1 BC 45 A0  1 
1A42828 	60 53 A0  1 18 70 A0  1 
1A42830 	98 40 A0  1 34  D A1  1 
   $show-devs
1A42838 	34 2D A2  1 
   r> to exit?
1A4283C 	D0 45 A0  1 
1A42840 	98 40 A0  1 34  D A1  1 
;
1A42848 	58 46 A0  1 

: (probe-usb2)  ( -- )
1A4284C 	 0  0  0 28 
1A42850 	70 72 6F 62 65 2D 75 73 
1A42858 	62 32 29 8C 14 28 A4  1 
1A42860 	20 40 A0  1 
   " device_type" get-property  if  exit  then
1A42864 	9C 53 A0  1 
1A42868 	 B 64 65 76 69 63 65 5F 
1A42870 	74 79 70 65  0  0  0  0 
1A42878 	F4  D A2  1 DC 41 A0  1 
1A42880 	 8  0  0  0 40 46 A0  1 
[ifdef] use-usb-debug-port
   \ I haven't figured out how to turn on the EHCI cleanly
   \ when the Debug Port is running
   dbgp-off
[then]
   get-encoded-string  " ehci" $=  if
1A42888 	24 F7 A1  1 9C 53 A0  1 
1A42890 	 4 65 68 63 69  0  0  0 
1A42898 	88 8D A0  1 DC 41 A0  1 
1A428A0 	1C  0  0  0 
      pwd$ open-dev  ?dup  if  close-dev  then
1A428A4 	F0 4D A2  1 
1A428A8 	FC 3E A2  1 B4 70 A0  1 
1A428B0 	DC 41 A0  1  8  0  0  0 
1A428B8 	5C 37 A2  1 
   then
;
1A428BC 	58 46 A0  1 
: (show-usb2)  ( -- )
1A428C0 	28 73 68 6F 77 2D 75 73 
1A428C8 	62 32 29 8B 60 28 A4  1 
1A428D0 	20 40 A0  1 
   " device_type" get-property  if  exit  then
1A428D4 	9C 53 A0  1 
1A428D8 	 B 64 65 76 69 63 65 5F 
1A428E0 	74 79 70 65  0  0  0  0 
1A428E8 	F4  D A2  1 DC 41 A0  1 
1A428F0 	 8  0  0  0 40 46 A0  1 
   get-encoded-string  " ehci" $=  if
1A428F8 	24 F7 A1  1 9C 53 A0  1 
1A42900 	 4 65 68 63 69  0  0  0 
1A42908 	88 8D A0  1 DC 41 A0  1 
1A42910 	 C  0  0  0 
      pwd$ $nopage-show-devs
1A42914 	F0 4D A2  1 
1A42918 	14 28 A4  1 
   then
;
1A4291C 	58 46 A0  1 
: (probe-usb1)  ( -- )
1A42920 	 0  0  0 28 70 72 6F 62 
1A42928 	65 2D 75 73 62 31 29 8C 
1A42930 	D0 28 A4  1 20 40 A0  1 
   " device_type" get-property  if  exit  then
1A42938 	9C 53 A0  1  B 64 65 76 
1A42940 	69 63 65 5F 74 79 70 65 
1A42948 	 0  0  0  0 F4  D A2  1 
1A42950 	DC 41 A0  1  8  0  0  0 
1A42958 	40 46 A0  1 
   get-encoded-string  2dup " uhci" $= >r  " ohci" $= r> or  if
1A4295C 	24 F7 A1  1 
1A42960 	C0 49 A0  1 9C 53 A0  1 
1A42968 	 4 75 68 63 69  0  0  0 
1A42970 	88 8D A0  1 BC 45 A0  1 
1A42978 	9C 53 A0  1  4 6F 68 63 
1A42980 	69  0  0  0 88 8D A0  1 
1A42988 	D0 45 A0  1 70 44 A0  1 
1A42990 	DC 41 A0  1 1C  0  0  0 
      pwd$ open-dev  ?dup  if  close-dev  then
1A42998 	F0 4D A2  1 FC 3E A2  1 
1A429A0 	B4 70 A0  1 DC 41 A0  1 
1A429A8 	 8  0  0  0 5C 37 A2  1 
   then
;
1A429B0 	58 46 A0  1 
: (show-usb1)  ( -- )
1A429B4 	28 73 68 6F 
1A429B8 	77 2D 75 73 62 31 29 8B 
1A429C0 	34 29 A4  1 20 40 A0  1 
   " device_type" get-property  if  exit  then
1A429C8 	9C 53 A0  1  B 64 65 76 
1A429D0 	69 63 65 5F 74 79 70 65 
1A429D8 	 0  0  0  0 F4  D A2  1 
1A429E0 	DC 41 A0  1  8  0  0  0 
1A429E8 	40 46 A0  1 
   get-encoded-string  2dup " uhci" $= >r  " ohci" $= r> or  if
1A429EC 	24 F7 A1  1 
1A429F0 	C0 49 A0  1 9C 53 A0  1 
1A429F8 	 4 75 68 63 69  0  0  0 
1A42A00 	88 8D A0  1 BC 45 A0  1 
1A42A08 	9C 53 A0  1  4 6F 68 63 
1A42A10 	69  0  0  0 88 8D A0  1 
1A42A18 	D0 45 A0  1 70 44 A0  1 
1A42A20 	DC 41 A0  1  C  0  0  0 
      pwd$ $nopage-show-devs
1A42A28 	F0 4D A2  1 14 28 A4  1 
   then
;
1A42A30 	58 46 A0  1 
: probe-usb  ( -- )
1A42A34 	 0  0 70 72 
1A42A38 	6F 62 65 2D 75 73 62 89 
1A42A40 	C4 29 A4  1 20 40 A0  1 
   ." USB2 devices:" cr
1A42A48 	20 7C A0  1  D 55 53 42 
1A42A50 	32 20 64 65 76 69 63 65 
1A42A58 	73 3A  0  0 80 6D A0  1 
   " /" ['] (probe-usb2) scan-subtree
1A42A60 	9C 53 A0  1  1 2F  0  0 
1A42A68 	60 53 A0  1 60 28 A4  1 
1A42A70 	70 5E A2  1 
   " /" ['] (show-usb2) scan-subtree
1A42A74 	9C 53 A0  1 
1A42A78 	 1 2F  0  0 60 53 A0  1 
1A42A80 	D0 28 A4  1 70 5E A2  1 
 exit
1A42A88 	40 46 A0  1 
   ." USB1 devices:" cr
1A42A8C 	20 7C A0  1 
1A42A90 	 D 55 53 42 31 20 64 65 
1A42A98 	76 69 63 65 73 3A  0  0 
1A42AA0 	80 6D A0  1 
   " /" ['] (probe-usb1) scan-subtree
1A42AA4 	9C 53 A0  1 
1A42AA8 	 1 2F  0  0 60 53 A0  1 
1A42AB0 	34 29 A4  1 70 5E A2  1 
   " /" ['] (show-usb1) scan-subtree
1A42AB8 	9C 53 A0  1  1 2F  0  0 
1A42AC0 	60 53 A0  1 C4 29 A4  1 
1A42AC8 	70 5E A2  1 
;
1A42ACC 	58 46 A0  1 
alias p2 probe-usb
1A42AD0 	 0 70 32 A2 44 2A A4  1 
1A42AD8 	44 2A A4  1 
[ifdef] mmo
: ?usb-keyboard  ( -- )
   " keyboard" expand-alias  if   ( devspec$ )
      drop " /usb"  comp  0=  if  ( )
         red-letters  ." Using USB keyboard." cr  cancel
         " keyboard" input
         exit
      then
   then
   " /usb/serial" open-dev  ?dup  if
      red-letters  ." Using USB serial console." cr  cancel
      dup set-stdin set-stdout
   then
;
[then]

\ Unlink every node whose phys.hi component matches port
: port-match?  ( port -- flag )
1A42ADC 	70 6F 72 74 
1A42AE0 	2D 6D 61 74 63 68 3F 8B 
1A42AE8 	D8 2A A4  1 20 40 A0  1 
   get-unit  if  drop false exit  then
1A42AF0 	90 15 A2  1 DC 41 A0  1 
1A42AF8 	10  0  0  0 30 49 A0  1 
1A42B00 	18 70 A0  1 40 46 A0  1 
   get-encoded-int =
1A42B08 	A0 F7 A1  1 24 48 A0  1 
;
1A42B10 	58 46 A0  1 
